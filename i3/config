### Variables
#
# Logo key. Use Mod1 for Alt/Meta
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Alacritty for terminal emulator
set $term alacritty

# Dmenu for application launcher
set $menu ~/.config/i3/dmenu_run_history

# Slock for screen locker
set $Locker slock && sleep 1


# Use Iosevka Nerd Font size:10
font pango:IosevkaNerdFont 10

# Autostart applications

# Start XDG autostart .desktop files using dex. See also https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

exec --no-startup-id xss-lock --transfer-sleep-lock -- slock
exec --no-startup-id nm-applet
exec --no-startup-id "blueberry-tray &"
exec --no-startup-id "mihomo-party"
exec --no-startup-id "~/.screenlayout/portable-setup.sh"
exec --no-startup-id "picom --no-fading-openclose -b"
exec_always --no-startup-id "feh --bg-fill --randomize /home/qzhou/Pictures/Wallpapers/*"
exec_always --no-startup-id "fcitx5 -d"
exec_always --no-startup-id "dunst"
#
### Key bindings
#Basics:
#
    # Start a terminal
    bindsym $mod+Return exec --no-startup-id alacritty

    # kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec --no-startup-id $menu
    
    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod

    # Reload the configuation file
    bindsym $mod+Shift+c reload

    # Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
    bindsym $mod+Shift+r restart


    # Exit i3 (logs you out of your X session)
    bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Define names for default workspaces for which we configure key bindings later on.
    # We use variables to avoid repeating the names in multiple places.
    set $ws1 "1"
    set $ws2 "2"
    set $ws3 "3"
    set $ws4 "4"
    set $ws5 "5"
    set $ws6 "6"
    set $ws7 "7"
    set $ws8 "8"
    set $ws9 "9"
    set $ws10 "10"

    # Switch to workspace
    bindsym $mod+1 workspace number $ws1
    bindsym $mod+2 workspace number $ws2
    bindsym $mod+3 workspace number $ws3
    bindsym $mod+4 workspace number $ws4
    bindsym $mod+5 workspace number $ws5
    bindsym $mod+6 workspace number $ws6
    bindsym $mod+7 workspace number $ws7
    bindsym $mod+8 workspace number $ws8
    bindsym $mod+9 workspace number $ws9
    bindsym $mod+0 workspace number $ws10
    bindsym $mod+Tab workspace next
    bindsym $mod+Shift+Tab workspace prev

    # Nove focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number $ws1
    bindsym $mod+Shift+2 move container to workspace number $ws2
    bindsym $mod+Shift+3 move container to workspace number $ws3
    bindsym $mod+Shift+4 move container to workspace number $ws4
    bindsym $mod+Shift+5 move container to workspace number $ws5
    bindsym $mod+Shift+6 move container to workspace number $ws6
    bindsym $mod+Shift+7 move container to workspace number $ws7
    bindsym $mod+Shift+8 move container to workspace number $ws8
    bindsym $mod+Shift+9 move container to workspace number $ws9
    bindsym $mod+Shift+0 move container to workspace number $ws10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff
#
    # You can "split" the current object of your focus with
    # $mod+c or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+c splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    #bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split
    
    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Resizing containers:
#
    mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym j resize shrink width 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym l resize shrink height 10 px or 10 ppt
    bindsym semicolon resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Utilities:
#
    # Special keys to adjust volume via PulseAudio

    # Pulse Audio controls
    bindsym XF86AudioRaiseVolume exec "amixer -q sset Master 5%+ unmute"
    bindsym XF86AudioLowerVolume exec "amixer -q sset Master 5%- unmute"
    bindsym XF86AudioMute exec "amixer -q sset Master,0 toggle"
    bindsym XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle

    # Special keys to adjust brightness via brightnessctl
    bindsym XF86MonBrightnessUp exec xbacklight -inc 5
    bindsym XF86MonBrightnessDown exec xbacklight -dec 5

    bindsym $mod+b exec --no-startup-id "boomer"
    bindsym --release $mod+Shift+l exec $Locker


    # Start i3bar to display a workspace bar (plus the system information i3status
    # finds out, if available)
    bar {
        status_command i3status
    }

    bindsym $mod+Pause mode "$mode_system"
    focus_follows_mouse no
    hide_edge_borders both

    # Arbitrary commands for specific windows (for_window)
    for_window [class="wechat"] floating enable
    for_window [class="QQ"] floating enable
    for_window [class="bilibili"] floating enable
    for_window [class="obs"] floating enable
    for_window [class="overskride"] floating enable
    for_window [class="mihomo-party"] floating enable
    for_window [class="Blueberry.py"] floating enable
    # for_window [class="discord"] floating enable
    
    # Automatically puts clinets on specific workspaces
    assign [class="Google-chrome"] 2
    assign [class="wechat"] 3
    assign [class="QQ"] 3
    assign [class="discord"] 3
    assign [class="bilibili"] 2
    assign [class="mihomo-party"] 4

    # Screenshots
    bindsym $mod+s exec --no-startup-id maim -s ~/Pictures/Screenshots/$(date +%Y-%m-%d_%H-%M-%S).png
    bindsym $mod+Shift+s exec --no-startup-id maim -s | xclip -selection clipboard -t image/png
#
### End
